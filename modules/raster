!
! Raster display support
!

require ctr-step

!
! The right button menu.
!
define widget raster-right intmenu 'x'
	title 'Raster image options'
	line
	entry 'Highlighting' 'popup highlight'
	submenu 'Color tables' Color-tables
	line
	entry 'Raster representation' 'raster-rep raster' \
		(PDParam (icon_component, 'representation') = 'raster')
	entry 'Contour representation' 'raster-rep contour' \
		(PDParam (icon_component, 'representation') = 'contour')
	entry 'Filled contour representation' 'raster-rep filled-contour' \
		(PDParam (icon_component, 'representation') = 'filled-contour')
endmenu

!
! A widget to control highlighting.
!
define widget highlight form 'Highlight'
	noheader
	popup hl-popup
!
! First line boilerplate.
!
	label title 'Highlighting'
	label comp 'comp' width 1 color gray95
	button help 'Help' command 'help limits'
	button apply 'Apply' command hl-apply
	button applyd 'Apply and Dismiss' command 'hl-apply; popdown #ui$form'
	button dismiss 'Dismiss' command 'popdown #ui$form'
	newline
!
! Center and range options.
!
	label hc 'Highlight center:'
	blank center 'center' width 60
	label r 'range:'
	blank range 'range' width 60
	label c 'color:'
	pulldown highlight-color 'color' width 80 menu form-color-menu
	newline
	label clue 'Set range to 0 to disable highlighting'
enddef


procedure hl-popup
	local f ui$form
	local c icon_component
	local field SimpleFieldName(PDParam(c, 'field'))
	formtext #f comp #c
!center
	local param concat(field, '-highlight')
	local center PDSearch(c, param, 'raster')
	if (center = "(Undefined)")
		local center "0.0"
	endif
	formtext #f center #center
!range
	local param concat(field, '-highlight-range')
	local range PDSearch(c, param, 'raster')
	if (range = "(Undefined)")
		local range '0.0'
	endif
	formtext #f range #range
!color
	local param concat(field, '-highlight-color')
	local color PDSearch(c, param, 'raster')
	if (color = "(Undefined)")
		local color "white"
	endif
	formtext #f highlight-color #color
endprocedure



procedure hl-apply
	local f ui$form
	local c getftext(f, 'comp')
	local field SimpleFieldName(PDParam(c, 'field'))

	local center getftext(f, 'center')
	local param concat(field, '-highlight')
	parameter #c #param #center

	local range getftext(f, 'range')
	local param concat(field, '-highlight-range')
	parameter #c #param #range

	local color getftext(f, 'highlight-color')
	local param concat(field, '-highlight-color')
	parameter #c #param #color
endprocedure

procedure raster-rep rep string
	parameter #icon_component representation #rep
endprocedure

!
! Custom center/step/nsteps popup
!
procedure raster-limit-proc junk string
	popup raster-center-step
endprocedure

define widget raster-center-step form 'Center and step adjustment'
	popup raster-ctr-step-popup
	noheader
!
! title/zeb line.
!
	label l1 'Raster center/step/nsteps limits'
	button help 'Help' command 'help limits'
	button apply 'Apply' command 'raster-ctr-step-apply'
	button zap 'Dismiss' color red command 'popdown #ui$form'
	newline
!
! Scale mode.
!
	label lmode 'Mode: '
	button mode 'FUNKY' command 'ToggleMode' width 70
	label comp 'comp' color gray95 
	newline
!
! The actual center and step if they want to tweak it.
!
	label lcenter 'Center: '
	blank center '0.0' width 60 
	label lstep ' Step: '
	blank step '0.0' width 60
	label lnstep ' # of Steps:'
	blank nsteps '11' width 60
enddef


!
! The popup procedure for the center/step/nsteps form.
!
procedure raster-ctr-step-popup
!
! Pull some basic info.
!
	local f ui$form
	local rep pd_param(icon_component,'representation','string')
	if (rep = 'filled-contour')
		local rep 'contour'
	endif
	local field SimpleFieldName(PDParam(icon_component,'field'))
	local plat pd_param(icon_component, 'platform', 'string')
!
! Now see if they have auto scaling turned on.
!
	local mode pd_ParamSearch(icon_component, 'scale-mode', plat, 'string')
	if (mode = 'auto' or mode = 'autoscale')
		formtext #f mode 'auto'
	else
		formtext #f mode 'manual'
	endif
!
! Pull in the center/step/nstep values.
!
	local param concat(field, '-center')
	local value pd_ParamSearch(icon_component, param, rep, 'string')
	if (value = '(Undefined)')
		formtext #f center 0
	else
		formtext #f center #value
	endif
	local param concat(field, '-step')
	local value pd_ParamSearch(icon_component, param, rep, 'string')
	if (value = '(Undefined)')
		formtext #f step 1
	else
		formtext #f step #value
	endif
	local param concat(field, '-nsteps')
	local value pd_ParamSearch(icon_component, param, rep, 'string')
	if (value = '(Undefined)')
		formtext #f nsteps 11
	else
		formtext #f nsteps #value
	endif
endprocedure



!
! Apply all the junk they just put in.
!
procedure raster-ctr-step-apply
	parameter global 'plot-hold' 'true'
	local f ui$form
	local mode getftext(f, 'mode')
	parameter #icon_component 'scale-mode' #mode
	local center getftext(f, 'center')
	local step getftext(f, 'step')
	local nsteps getftext(f, 'nsteps')
	local field SimpleFieldName(PDParam(icon_component,'field'))
	local param concat(field, '-center')
	parameter #icon_component #param #center
	local param concat(field, '-step')
	parameter #icon_component #param #step
	local param concat(field, '-nsteps')
	parameter #icon_component #param #nsteps
	parameter global 'plot-hold' 'false'
endprocedure

require color-table
